version: "2"
services:

  nginx:
    build:
      context: ./services/nginx
      args:
        NGINX_VERSION: nginx:${NGINX_VERSION}
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        NGINX_INSTALL_APPS: ${NGINX_INSTALL_APPS}
    container_name: tynginx
    ports:
      - "${NGINX_HTTP_HOST_PORT}:80"
      - "${NGINX_HTTPS_HOST_PORT}:443"
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${NGINX_SSL_CERTIFICATE_DIR}:/ssl:rw
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d/:rw
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro
      - ${NGINX_FASTCGI_PHP_CONF}:/etc/nginx/fastcgi-php.conf:ro
      - ${NGINX_FASTCGI_PARAMS}:/etc/nginx/fastcgi_params:ro
      - ${NGINX_LOG_DIR}:/var/log/nginx/:rw
    environment:
      TZ: "$TZ"
    restart: always
    networks:
      - default
#  openresty:
#    image:  openresty/openresty:${OPENRESTY_VERSION}
#    container_name: tyopenresty
#    ports:
#      - "${OPENRESTY_HTTP_HOST_PORT}:80"
#      - "${OPENRESTY_HTTPS_HOST_PORT}:443"
#    volumes:
#      - ${SOURCE_DIR}:/www/:rw
#      - ${OPENRESTY_CONFD_DIR}:/etc/nginx/conf.d/:ro
#      - ${OPENRESTY_SSL_CERTIFICATE_DIR}:/ssl:rw
#      - ${OPENRESTY_CONF_FILE}:/usr/local/openresty/nginx/conf/nginx.conf:ro
#      - ${OPENRESTY_FASTCGI_PHP_CONF}:/usr/local/openresty/nginx/conf/fastcgi-php.conf:ro
#      - ${OPENRESTY_CONF_FASTCGIPARAMS_FILE}:/usr/local/openresty/nginx/conf/fastcgi_params:ro
#      - ${OPENRESTY_LOG_DIR}:/var/log/nginx/:rw
#    environment:
#      TZ: "$TZ"
#    networks:
#      - default
  php:
    build:
      context: ./services/php
      args:
        PHP_VERSION: php:${PHP_VERSION}-fpm-alpine
        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
        PHP_EXTENSIONS: ${PHP_EXTENSIONS}
        TZ: "$TZ"
    container_name: typhp
    expose:
      - 9501
    extra_hosts:
      - "www.brown.com:172.17.0.1"
    volumes:
      - ${SOURCE_DIR}:/www/:rw
      - ${PHP_PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      - ${PHP_FPM_CONF_FILE}:/usr/local/etc/php-fpm.d/www.conf:rw
      - ${PHP_LOG_DIR}:/var/log/php
      - ${DATA_DIR}/composer:/tmp/composer
    restart: always
    cap_add:
      - SYS_PTRACE
    networks:
      - default


#  mysql:
#      image: mysql:${MYSQL_VERSION}
#      container_name: tymysql8
#      ports:
#        - "${MYSQL_HOST_PORT}:3306"
#      volumes:
#        - ${MYSQL_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
#        - ${DATA_DIR}/mysql:/var/lib/mysql/:rw
#      restart: always
#      networks:
#        - default
#      environment:
#        MYSQL_ROOT_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
#        TZ: "$TZ"

#  mysql5:
#    image: mysql:${MYSQL5_VERSION}
#    container_name: tymysql5
#    ports:
#      - "${MYSQL5_HOST_PORT}:3306"
#    volumes:
#      - ${MYSQL5_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
#      - ${DATA_DIR}/mysql5:/var/lib/mysql/:rw
#    restart: always
#    networks:
#      - default
#    environment:
#      MYSQL_ROOT_PASSWORD: "${MYSQL5_ROOT_PASSWORD}"
#      TZ: "$TZ"


  redis:
    image: redis:${REDIS_VERSION}
    container_name: tyredis
    ports:
      - "${REDIS_HOST_PORT}:6379"
    volumes:
      - ${REDIS_CONF_FILE}:/etc/redis.conf:ro
      - ${DATA_DIR}/redis:/data/:rw
    restart: always
    entrypoint: ["redis-server", "/etc/redis.conf"]
    environment:
      TZ: "$TZ"
    networks:
      - default


#  supervisor:
#    build:
#      context: ./services/supervisor
#      args:
#        ALPINE_VERSION: alpine:${ALPINE_VERSION}
#        TZ: "$TZ"
#        CONTAINER_PACKAGE_URL: ${CONTAINER_PACKAGE_URL}
#    container_name: tysupervisor
#    ports:
#      - "${SUPERVISOR_HOST_PORT_C}:9001"
#    volumes:
#      - ${SOURCE_DIR}:/www/:rw
#      - ${SUPERVISOR_LOG}:/var/log/supervisor/:rw
#      - ${SUPERVISOR_CONFIG}:/etc/supervisor/conf.d/:rw
#      - ${SUPERVISOR_CONF_FILE}:/etc/supervisor/supervisord.conf:ro
#    command:
#      - /bin/sh
#      - -c
#      - |
#        supervisord -n -c /etc/supervisor/supervisord.conf
#    restart: always
#    cap_add:
#      - SYS_PTRACE
#    networks:
#      - default
  consul1:
    image: consul
    command: agent -server -bootstrap-expect=3 -ui -disable-host-node-id -client=0.0.0.0
    environment:
      - 'CONSUL_LOCAL_CONFIG={"skip_leave_on_interrupt": true}'
    ports:
      - '8500:8500'
      - '8600:8600/udp'
      - '8300:8300'
      - '8301:8301'
      - '8301:8301/udp'
      - '8302:8302'
      - '8302:8302/udp'
    volumes:
      - ./log/consul/consul1:/consul/data
    networks:
      - backend
    container_name: tianyu-consul1
  consul2:
    image: consul
    command: agent -server -join consul1 -disable-host-node-id
    environment:
      - 'CONSUL_BIND_INTERFACE=eth0'
    depends_on:
      - consul1
    volumes:
      - ./log/consul/consul2:/consul/data
    networks:
      - backend
    container_name: tianyu-consul2
  consul3:
    image: consul
    command: agent -server -join consul1 -disable-host-node-id
    environment:
      - 'CONSUL_BIND_INTERFACE=eth0'
    depends_on:
      - consul1
    volumes:
      - ./log/consul/consul3:/consul/data
    networks:
      - backend
    container_name: tianyu-consul3
  node:
    image: node:${NODE_VERSION}
    environment:
      - NODE_ENV=production
    volumes:
      - ${SOURCE_DIR}:/www/:rw
    expose:
      - "8081"
    networks:
      - default
    stdin_open: true
    tty: true
networks:
  default: